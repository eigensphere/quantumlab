clc
clear all
close all
format long eng

%   -----------------------------------------
%   VALORES DE ENTRADA
%   -----------------------------------------

i       = sqrt(-1);
%hbar    = 6.626e-34;
hbar    = 1;
w0      = 15500;
w       = 15499.99;
a       = 1.0e12;
ph      = pi;

%   -----------------------------------------
%   TIEMPO/CICLOS
%   -----------------------------------------

N   = 10;
ti  = 0.1;
tf  = 0;
te  = 0.15001;
ta  = 0.4;
t   = 0;
tn  = 0;
tm  = 0;

%   -----------------------------------------
%   BASES ORTONORMALES DEL ESPACIO DE ESTADOS
%   -----------------------------------------

E1 = [0;1];
E2 = [1;0];

%   -----------------------------------------
%   MATRICES SPIN
%   -----------------------------------------

sx  = [0,1;1,0]; 
sy  = [0,-i;i,0];
sz  = [1,0;0,-1];

%   =====================================================
%   INICIALIZAR
%   =====================================================

a1      = abs(cos(ph))*exp(-i*w*hbar*ti/2);
a2      = 0;
psi0    = a1*E1 + a2*E2;

%   -----------------------------------------
%   ECUACIONES DE BLOCH
%   -----------------------------------------

x0 = 2*( real(psi0(1,:)) * conj(real(psi0(2,:))) );
y0 = 2*( imag(psi0(1,:)) * conj(imag(psi0(2,:))) );
z0 = abs(psi0(1,:))^2    - abs(psi0(2,:))^2;

CB = [x0,y0,z0];

%   -----------------------------------------
%   MAPEO DE HOPF
%   -----------------------------------------  

x(1) = psi0'*sx*psi0;    
y(1) = psi0'*sy*psi0;   
z(1) = psi0'*sz*psi0;

CH(1,:) = [x(1),y(1),z(1)];


%   =====================================================
%   [!] CICLOS
%   =====================================================

n = 2;
for c = 0:2*N - 1
        
    %   -----------------------------------------
    %   EVOLUCION
    %   -----------------------------------------
  
    if (mod(c,2)==0)
        A = a;
        t = te;
    else
        A = 0;
        t = ta;
    end
    
    tn = tn + t;
    tm = tn - t;
    
    U0    = cos(w/(2*hbar)*(tn-tm))*eye(2) - i*sin(w/(2*hbar)*(tn-tm))*sz; 
    U1    = cos(A/(2*hbar)*(tn-tm))*eye(2) - i*sin(A/(2*hbar)*(tn-tm))*sx;
    U2    = cos(A/(2*hbar)*(tn-tm))*eye(2) - i*sin(A/(2*hbar)*(tn-tm))*sy;
    U3    = cos(1/(2*hbar)*(w0-w)*(tn-tm))*eye(2) - i*sin(1/(2*hbar)*(w0-w)*(tn-tm))*sz; 
    W     = U1*U2*U3;  
    UT    = U0*W;
    psi   = UT*psi0;
    
    psi0  = psi;
    
    %   -----------------------------------------
    %   MAPEO DE HOPF
    %   -----------------------------------------  
    
    x(n) = psi'*sx*psi;
    y(n) = psi'*sy*psi;
    z(n) = psi'*sz*psi;
   
    if (mod(c,2) == 0)
        CH(n,:) = [x(n),y(n),z(n)];
        n = n + 1;
    end
    
end

tf = tn + ti;

save('datos.dat','CH');

